# type Approval @entity {
#   id: ID!
#   owner: Bytes! # address
#   approved: Bytes! # address
#   tokenId: BigInt! # uint256
# }

# type ApprovalForAll @entity {
#   id: ID!
#   owner: Bytes! # address
#   operator: Bytes! # address
#   approved: Boolean! # bool
# }

# type TokenMetadataURIUpdated @entity {
#   id: ID!
#   _tokenId: BigInt! # uint256
#   owner: Bytes! # address
#   _uri: String! # string
# }

# type TokenURIUpdated @entity {
#   id: ID!
#   _tokenId: BigInt! # uint256
#   owner: Bytes! # address
#   _uri: String! # string
# }

# type Transfer @entity {
#   id: ID!
#   from: Bytes! # address
#   to: Bytes! # address
#   tokenId: BigInt! # uint256
# }

type Token @entity {
    id: ID!
    tokenID: BigInt!
    contentURI: String!
    metadataURI: String!
    createdAtTimestamp: BigInt!
    creator: User!
    owner: User!
}

type User @entity {
    id: ID!
    tokens: [Token!]! @derivedFrom(field: "owner")
    created: [Token!]! @derivedFrom(field: "creator")
}